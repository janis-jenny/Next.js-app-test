import MeetupList from '../components/meetups/MeetupList';

const DUMMY_MEETUPS = [
  {
    id: 'm1',
    title: 'A First Meetup',
    image: 'https://photographycourse.net/wp-content/uploads/2014/11/Landscape-Photography-steps.jpg',
    address: 'Some Address',
    description: 'This is a first meetup'
  },
  {
    id: 'm2',
    title: 'A Second Meetup',
    image: 'https://photographycourse.net/wp-content/uploads/2014/11/Landscape-Photography-steps.jpg',
    address: 'Some Address',
    description: 'This is a first meetup'
  }
]
// No recommended to use useState and useEffect because of 1st render cycles we have a proble with SEO and may be missing some data,
// the prerender html page doesnt wait the 2nd cycle generated by using useEffect, it always takes the result of the first render cycle 
// and returns that as the prerender html page content, we need to tell next when we are done waiting of the fetch data
export default function Home(props) {
  return (
    <MeetupList meetups={props.meetups}/>   
  )
}
// if we wanna pre render a page with data, next offers 1 ways of prerendering for controlling how the page should be render:
// static generationa and server side rendering
// static generation: page component is pre-render when you build your app for production, after you deply taht prerender doesnt change
// if you uddate the data you need to start that build proccess again and re deploy. By default next prepares your pages staticlly in build process
// if you need render fetch data use getStaticProps in page components files, its jobs is to prepare props for the page, next will execute it during the prerendering process
// first next will call getStaticProps before it calls the component function. Next will wait for this promise to resolve until the data is leaded and then return the props,
// then execute the function component and it will render with the required data
export async function getStaticProps() { //gets data fetching for prerendering during the build process
  // this code here will never execute on the client side only in the server side or build process side
  // fetch data from an api or database // read data from a fyle system
  return {
    props: {
      meetups: DUMMY_MEETUPS,
    }
  }
}
